{"version":3,"sources":["images sync /^/.//.*/.jpg$","images/1.jpg","images/2.jpg","images/3.jpg","todoApp/TodoInput.js","todoApp/TodoListTabs.js","todoApp/TodoListItem.js","todoApp/TodoList.js","todoApp/TodoApp.js","Header.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TodoInput","props","text","React","createRef","handleSubmit","bind","preventDefault","this","current","value","addItem","onSubmit","ref","className","type","placeholder","autoFocus","Component","TodoListTabs","state","tabs","clearCompleted","clearCompletedItems","style","color","items","filter","item","done","length","key","onClick","toggleFilter","Button","size","TodoListItem","deleteClick","doneClick","index","parseInt","removeItem","doneItem","isDone","classNames","Checkbox","checked","onChange","TodoList","setState","completed","list","filteredTodos","ontoggle","TodoApp","deleteItem","newItem","Date","now","concat","splice","todo","unshift","push","Header","Fab","title","Footer","App","onRef","background","Background","imageNum","image","require","bgStyle","width","high","backgroundImage","backgroundPosition","backgroundSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.859099f5.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": 44,\n\t\"./2.jpg\": 45,\n\t\"./3.jpg\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43;","module.exports = __webpack_public_path__ + \"static/media/1.cd02fe7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.fe0859e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.68ca4922.jpg\";","import React, { Component } from 'react';\n\nclass TodoInput extends Component {\n  constructor(props) {\n    super(props);\n    this.text = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if(!this.text.current.value) return\n    this.props.addItem({text: this.text.current.value})\n    this.text.current.value = '';\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          ref={this.text}\n          className=\"todoList-input\"\n          type=\"text\"\n          placeholder=\"接下来做什么？\"\n          // 加载页面时聚焦\n          autoFocus='autoFocus'\n        />\n      </form>\n    )\n  }\n}\n\nexport default TodoInput;","import React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\"\n\nclass TodoListTabs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabs: [\"all\", \"active\", \"completed\"],\n    }\n    this.clearCompleted = this.clearCompleted.bind(this);\n  }\n\n  clearCompleted() {\n    this.props.clearCompletedItems();\n  }\n\n  render() {\n    return (\n      <div className=\"helper\">\n        <span className=\"left\" style={{ color: '#f50057' }}>\n          {this.props.items.filter(item => !item.done).length} left\n        </span>\n        <span className=\"tabs\">\n          {this.state.tabs.map((item) =>\n            <span\n              className={this.props.filter === item ? 'actived' : ''}\n              key={item}\n              onClick={() => this.props.toggleFilter(item)}\n            >\n              {item}\n            </span>\n          )}\n        </span>\n        <Button size=\"small\" color=\"secondary\" className=\"clear\" onClick={this.clearCompleted}> Clear Completed</Button >\n      </div >\n    )\n  }\n}\n\nexport default TodoListTabs;","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Checkbox from '@material-ui/core/Checkbox'\n\nclass TodoListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteClick = this.deleteClick.bind(this);\n        this.doneClick = this.doneClick.bind(this);\n    }\n\n    deleteClick() {\n        const index = parseInt(this.props.index);\n        this.props.removeItem(index);\n    }\n\n    doneClick() {\n        const index = parseInt(this.props.index);\n        this.props.doneItem(index)\n    }\n\n    render() {\n        const isDone = classNames(\n            'todo-item',\n            { 'todo-item completed': this.props.done }\n        )\n        return (\n            <div className={isDone}>\n                <Checkbox\n                    checked={this.props.done}\n                    onChange={this.doneClick}\n                    className='toggle'\n                />\n                <label>{this.props.text}</label>\n                <button className='destory' onClick={this.deleteClick}></button>\n            </div>\n        )\n    }\n\n}\nexport default TodoListItem;","import React, { Component } from 'react';\nimport TodoListTabs from './TodoListTabs';\nimport TodoListItem from './TodoListItem';\n\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: 'all',\n    }\n    this.toggleFilter = this.toggleFilter.bind(this);\n  }\n\n  toggleFilter(item) {\n    this.setState({ filter: item })\n  }\n\n  filteredTodos() {\n    if (this.state.filter === 'all') {\n      return this.props.items\n    }\n    const completed = this.state.filter === 'completed'\n    return this.props.items.filter(item => item.done === completed)\n  }\n\n  render() {\n    const list = this.filteredTodos().map((item, index) => {\n      return (\n        <TodoListItem\n          key={item.id}\n          text={item.text}\n          done={item.done}\n          index={index}\n          removeItem={this.props.deleteClick}\n          doneItem={this.props.doneClick}\n        />\n      );\n    })\n    return (\n      <div>\n        <div className='todoListItem'>\n          {list}\n        </div>\n        <TodoListTabs\n          items={this.props.items}\n          toggleFilter={this.toggleFilter}\n          ontoggle={this.toggleFilter}\n          filter={this.state.filter}\n          clearCompletedItems={this.props.clearCompletedItems}\n        />\n      </div>\n\n    )\n  }\n}\n\n\nexport default TodoList;","import React, { Component } from 'react';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n    }\n    this.text = React.createRef();\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.doneItem = this.doneItem.bind(this);\n    this.clearCompletedItems = this.clearCompletedItems.bind(this);\n  }\n\n  addItem(item) {\n    const newItem = {\n      text: item.text,\n      id: Date.now(),\n      done: false\n    }\n\n    this.setState((state) => ({\n      items: state.items.concat(newItem)\n    }));\n  }\n\n  deleteItem(index) {\n    this.state.items.splice(index, 1)\n    this.setState((state) => ({\n      items: state.items\n    }));\n  }\n\n  clearCompletedItems() {\n    this.setState((state) => ({\n      items: state.items.filter(item => !item.done)\n    }))\n  }\n\n  doneItem(index) {\n    const items = this.state.items;\n    const todo = items[index];\n    items.splice(index, 1);\n    todo.done = !todo.done;\n    todo.done ? items.unshift(todo) : items.push(todo);\n    this.setState({ items });\n  }\n\n  render() {\n    return (\n      <div className='wrapper'>\n        <TodoInput\n          items={this.state.items}\n          addItem={this.addItem}\n        />\n        <TodoList\n          items={this.state.items}\n          deleteClick={this.deleteItem}\n          doneClick={this.doneItem}\n          clearCompletedItems={this.clearCompletedItems}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TodoApp;","import React, { Component } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Loop from '@material-ui/icons/Loop';\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"App-header\">\n        <h1>TodoList</h1>\n        <div className=\"bg-change-button\" onClick={this.props.onClick}>\n          <Fab size=\"medium\" color=\"secondary\" title=\"change background\">\n            <Loop />\n          </Fab>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <span>Written by Zhang</span>\n      </div>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport TodoApp from './todoApp/TodoApp';\nimport Header from './Header';\nimport Footer from './Footer';\n\nclass App extends Component {\n  onRef = (ref) => {\n    this.background = ref\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Background onRef={this.onRef} />\n        <Header\n          onClick={\n            () => {\n              this.background.onChange && this.background.onChange()\n            }\n          }\n        />\n        <TodoApp />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nclass Background extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageNum: 1,\n    }\n  }\n  onChange = () => {\n    let index = this.state.imageNum + 1 > 3\n      ? 1 :\n      this.state.imageNum + 1;\n    this.setState({\n      imageNum: index\n    })\n  }\n\n  componentDidMount() {\n    this.props.onRef && this.props.onRef(this)\n  }\n\n  render() {\n    const image = require(\"./images/\" + this.state.imageNum + \".jpg\")\n    const bgStyle = {\n      width: '100%',\n      high: '400px',\n      backgroundImage: `url(${image})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n    };\n    return (\n      <div className='cover' style={bgStyle}>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif(module.hot) {\n    module.hot.accept();\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}